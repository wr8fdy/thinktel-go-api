// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ThinkteluControlAPIDataContractsSIPTrunkLine thinktel u control Api data contracts Sip trunk line
//
// swagger:model Thinktel.uControl.Api.DataContracts.SipTrunkLine
type ThinkteluControlAPIDataContractsSIPTrunkLine struct {

	// channels
	// Required: true
	Channels *int32 `json:"Channels"`

	// Sip binding ID
	// Required: true
	SIPBindingID *string `json:"SipBindingID"`

	// Sip binding name
	// Required: true
	SIPBindingName *string `json:"SipBindingName"`

	// Sip trunk number
	// Required: true
	SIPTrunkNumber *int64 `json:"SipTrunkNumber"`
}

// Validate validates this thinktel u control Api data contracts Sip trunk line
func (m *ThinkteluControlAPIDataContractsSIPTrunkLine) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChannels(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSIPBindingID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSIPBindingName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSIPTrunkNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThinkteluControlAPIDataContractsSIPTrunkLine) validateChannels(formats strfmt.Registry) error {

	if err := validate.Required("Channels", "body", m.Channels); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsSIPTrunkLine) validateSIPBindingID(formats strfmt.Registry) error {

	if err := validate.Required("SipBindingID", "body", m.SIPBindingID); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsSIPTrunkLine) validateSIPBindingName(formats strfmt.Registry) error {

	if err := validate.Required("SipBindingName", "body", m.SIPBindingName); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsSIPTrunkLine) validateSIPTrunkNumber(formats strfmt.Registry) error {

	if err := validate.Required("SipTrunkNumber", "body", m.SIPTrunkNumber); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this thinktel u control Api data contracts Sip trunk line based on context it is used
func (m *ThinkteluControlAPIDataContractsSIPTrunkLine) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ThinkteluControlAPIDataContractsSIPTrunkLine) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThinkteluControlAPIDataContractsSIPTrunkLine) UnmarshalBinary(b []byte) error {
	var res ThinkteluControlAPIDataContractsSIPTrunkLine
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
