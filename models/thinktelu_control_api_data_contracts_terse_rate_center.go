// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ThinkteluControlAPIDataContractsTerseRateCenter thinktel u control Api data contracts terse rate center
//
// swagger:model Thinktel.uControl.Api.DataContracts.TerseRateCenter
type ThinkteluControlAPIDataContractsTerseRateCenter struct {

	// available
	// Required: true
	Available *uint32 `json:"Available"`

	// country
	// Required: true
	Country *string `json:"Country"`

	// name
	// Required: true
	Name *string `json:"Name"`
}

// Validate validates this thinktel u control Api data contracts terse rate center
func (m *ThinkteluControlAPIDataContractsTerseRateCenter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAvailable(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThinkteluControlAPIDataContractsTerseRateCenter) validateAvailable(formats strfmt.Registry) error {

	if err := validate.Required("Available", "body", m.Available); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsTerseRateCenter) validateCountry(formats strfmt.Registry) error {

	if err := validate.Required("Country", "body", m.Country); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsTerseRateCenter) validateName(formats strfmt.Registry) error {

	if err := validate.Required("Name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this thinktel u control Api data contracts terse rate center based on context it is used
func (m *ThinkteluControlAPIDataContractsTerseRateCenter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ThinkteluControlAPIDataContractsTerseRateCenter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThinkteluControlAPIDataContractsTerseRateCenter) UnmarshalBinary(b []byte) error {
	var res ThinkteluControlAPIDataContractsTerseRateCenter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
