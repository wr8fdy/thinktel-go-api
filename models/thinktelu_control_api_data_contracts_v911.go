// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ThinkteluControlAPIDataContractsV911 thinktel u control Api data contracts v911
//
// swagger:model Thinktel.uControl.Api.DataContracts.V911
type ThinkteluControlAPIDataContractsV911 struct {

	// city
	// Required: true
	City *string `json:"City"`

	// first name
	// Required: true
	FirstName *string `json:"FirstName"`

	// last name
	// Required: true
	LastName *string `json:"LastName"`

	// number
	// Required: true
	Number *int64 `json:"Number"`

	// other info
	OtherInfo string `json:"OtherInfo,omitempty"`

	// postal zip
	// Required: true
	PostalZip *string `json:"PostalZip"`

	// province state
	// Required: true
	ProvinceState *string `json:"ProvinceState"`

	// street name
	// Required: true
	StreetName *string `json:"StreetName"`

	// street number
	// Required: true
	StreetNumber *string `json:"StreetNumber"`

	// suite number
	SuiteNumber string `json:"SuiteNumber,omitempty"`
}

// Validate validates this thinktel u control Api data contracts v911
func (m *ThinkteluControlAPIDataContractsV911) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePostalZip(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProvinceState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStreetName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStreetNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThinkteluControlAPIDataContractsV911) validateCity(formats strfmt.Registry) error {

	if err := validate.Required("City", "body", m.City); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsV911) validateFirstName(formats strfmt.Registry) error {

	if err := validate.Required("FirstName", "body", m.FirstName); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsV911) validateLastName(formats strfmt.Registry) error {

	if err := validate.Required("LastName", "body", m.LastName); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsV911) validateNumber(formats strfmt.Registry) error {

	if err := validate.Required("Number", "body", m.Number); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsV911) validatePostalZip(formats strfmt.Registry) error {

	if err := validate.Required("PostalZip", "body", m.PostalZip); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsV911) validateProvinceState(formats strfmt.Registry) error {

	if err := validate.Required("ProvinceState", "body", m.ProvinceState); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsV911) validateStreetName(formats strfmt.Registry) error {

	if err := validate.Required("StreetName", "body", m.StreetName); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsV911) validateStreetNumber(formats strfmt.Registry) error {

	if err := validate.Required("StreetNumber", "body", m.StreetNumber); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this thinktel u control Api data contracts v911 based on context it is used
func (m *ThinkteluControlAPIDataContractsV911) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ThinkteluControlAPIDataContractsV911) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThinkteluControlAPIDataContractsV911) UnmarshalBinary(b []byte) error {
	var res ThinkteluControlAPIDataContractsV911
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
