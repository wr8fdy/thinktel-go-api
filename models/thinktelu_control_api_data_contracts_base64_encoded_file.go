// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ThinkteluControlAPIDataContractsBase64EncodedFile The base64 encoded contents and minimum amount of metadata for a single file.
//
// swagger:model Thinktel.uControl.Api.DataContracts.Base64EncodedFile
type ThinkteluControlAPIDataContractsBase64EncodedFile struct {

	// The base64 encoded contents of the file.
	// Required: true
	Base64Contents *string `json:"Base64Contents"`

	// Content type of the file. Acceptable values are any valid MIME type(eg “application / pdf”).
	// Required: true
	ContentType *string `json:"ContentType"`

	// Name of the file.
	// Required: true
	FileName *string `json:"FileName"`
}

// Validate validates this thinktel u control Api data contracts base64 encoded file
func (m *ThinkteluControlAPIDataContractsBase64EncodedFile) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBase64Contents(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateContentType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFileName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThinkteluControlAPIDataContractsBase64EncodedFile) validateBase64Contents(formats strfmt.Registry) error {

	if err := validate.Required("Base64Contents", "body", m.Base64Contents); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsBase64EncodedFile) validateContentType(formats strfmt.Registry) error {

	if err := validate.Required("ContentType", "body", m.ContentType); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsBase64EncodedFile) validateFileName(formats strfmt.Registry) error {

	if err := validate.Required("FileName", "body", m.FileName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this thinktel u control Api data contracts base64 encoded file based on context it is used
func (m *ThinkteluControlAPIDataContractsBase64EncodedFile) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ThinkteluControlAPIDataContractsBase64EncodedFile) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThinkteluControlAPIDataContractsBase64EncodedFile) UnmarshalBinary(b []byte) error {
	var res ThinkteluControlAPIDataContractsBase64EncodedFile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
