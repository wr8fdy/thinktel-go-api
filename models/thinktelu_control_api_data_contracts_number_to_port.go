// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ThinkteluControlAPIDataContractsNumberToPort thinktel u control Api data contracts number to port
//
// swagger:model Thinktel.uControl.Api.DataContracts.NumberToPort
type ThinkteluControlAPIDataContractsNumberToPort struct {

	// Indicates when the TNs are ready to be ported.
	ReadyToPort bool `json:"ReadyToPort,omitempty"`

	// Meaning of the Neustar symbol on the dashboard.
	// Max Length: 40
	SvCondition string `json:"SvCondition,omitempty"`

	// Range of TNs being ported.
	// Max Length: 15
	// Min Length: 10
	TnRange string `json:"TnRange,omitempty"`
}

// Validate validates this thinktel u control Api data contracts number to port
func (m *ThinkteluControlAPIDataContractsNumberToPort) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSvCondition(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTnRange(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThinkteluControlAPIDataContractsNumberToPort) validateSvCondition(formats strfmt.Registry) error {
	if swag.IsZero(m.SvCondition) { // not required
		return nil
	}

	if err := validate.MaxLength("SvCondition", "body", m.SvCondition, 40); err != nil {
		return err
	}

	return nil
}

func (m *ThinkteluControlAPIDataContractsNumberToPort) validateTnRange(formats strfmt.Registry) error {
	if swag.IsZero(m.TnRange) { // not required
		return nil
	}

	if err := validate.MinLength("TnRange", "body", m.TnRange, 10); err != nil {
		return err
	}

	if err := validate.MaxLength("TnRange", "body", m.TnRange, 15); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this thinktel u control Api data contracts number to port based on context it is used
func (m *ThinkteluControlAPIDataContractsNumberToPort) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ThinkteluControlAPIDataContractsNumberToPort) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThinkteluControlAPIDataContractsNumberToPort) UnmarshalBinary(b []byte) error {
	var res ThinkteluControlAPIDataContractsNumberToPort
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
