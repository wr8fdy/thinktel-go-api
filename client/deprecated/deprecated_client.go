// Code generated by go-swagger; DO NOT EDIT.

package deprecated

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// New creates a new deprecated API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

// New creates a new deprecated API client with basic auth credentials.
// It takes the following parameters:
// - host: http host (github.com).
// - basePath: any base path for the API client ("/v1", "/v3").
// - scheme: http scheme ("http", "https").
// - user: user for basic authentication header.
// - password: password for basic authentication header.
func NewClientWithBasicAuth(host, basePath, scheme, user, password string) ClientService {
	transport := httptransport.New(host, basePath, []string{scheme})
	transport.DefaultAuthentication = httptransport.BasicAuth(user, password)
	return &Client{transport: transport, formats: strfmt.Default}
}

// New creates a new deprecated API client with a bearer token for authentication.
// It takes the following parameters:
// - host: http host (github.com).
// - basePath: any base path for the API client ("/v1", "/v3").
// - scheme: http scheme ("http", "https").
// - bearerToken: bearer token for Bearer authentication header.
func NewClientWithBearerToken(host, basePath, scheme, bearerToken string) ClientService {
	transport := httptransport.New(host, basePath, []string{scheme})
	transport.DefaultAuthentication = httptransport.BearerToken(bearerToken)
	return &Client{transport: transport, formats: strfmt.Default}
}

/*
Client for deprecated API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption may be used to customize the behavior of Client methods.
type ClientOption func(*runtime.ClientOperation)

// This client is generated with a few options you might find useful for your swagger spec.
//
// Feel free to add you own set of options.

// WithContentType allows the client to force the Content-Type header
// to negotiate a specific Consumer from the server.
//
// You may use this option to set arbitrary extensions to your MIME media type.
func WithContentType(mime string) ClientOption {
	return func(r *runtime.ClientOperation) {
		r.ConsumesMediaTypes = []string{mime}
	}
}

// WithContentTypeApplicationJSON sets the Content-Type header to "application/json".
func WithContentTypeApplicationJSON(r *runtime.ClientOperation) {
	r.ConsumesMediaTypes = []string{"application/json"}
}

// WithContentTypeApplicationXML sets the Content-Type header to "application/xml".
func WithContentTypeApplicationXML(r *runtime.ClientOperation) {
	r.ConsumesMediaTypes = []string{"application/xml"}
}

// WithAccept allows the client to force the Accept header
// to negotiate a specific Producer from the server.
//
// You may use this option to set arbitrary extensions to your MIME media type.
func WithAccept(mime string) ClientOption {
	return func(r *runtime.ClientOperation) {
		r.ProducesMediaTypes = []string{mime}
	}
}

// WithAcceptApplicationJSON sets the Accept header to "application/json".
func WithAcceptApplicationJSON(r *runtime.ClientOperation) {
	r.ProducesMediaTypes = []string{"application/json"}
}

// WithAcceptApplicationXML sets the Accept header to "application/xml".
func WithAcceptApplicationXML(r *runtime.ClientOperation) {
	r.ProducesMediaTypes = []string{"application/xml"}
}

// ClientService is the interface for Client methods
type ClientService interface {
	ThinkteluControlAPIRestServiceCancelV911v2Deprecated(params *ThinkteluControlAPIRestServiceCancelV911v2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIRestServiceCancelV911v2DeprecatedOK, error)

	ThinkteluControlAPIRestServiceGetV911v2Deprecated(params *ThinkteluControlAPIRestServiceGetV911v2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIRestServiceGetV911v2DeprecatedOK, error)

	ThinkteluControlAPIRestServiceUpdateDIDPremiumFeaturesDeprecated(params *ThinkteluControlAPIRestServiceUpdateDIDPremiumFeaturesDeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIRestServiceUpdateDIDPremiumFeaturesDeprecatedOK, error)

	ThinkteluControlAPIRestServiceUpdateSIPTrunkDIDV2Deprecated(params *ThinkteluControlAPIRestServiceUpdateSIPTrunkDIDV2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIRestServiceUpdateSIPTrunkDIDV2DeprecatedOK, error)

	ThinkteluControlAPIRestServiceUpdateSubscriberPremiumFeaturesDeprecated(params *ThinkteluControlAPIRestServiceUpdateSubscriberPremiumFeaturesDeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIRestServiceUpdateSubscriberPremiumFeaturesDeprecatedOK, error)

	ThinkteluControlAPIRestServiceUpdateV911v2Deprecated(params *ThinkteluControlAPIRestServiceUpdateV911v2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIRestServiceUpdateV911v2DeprecatedOK, error)

	ThinkteluControlAPIWebServiceAddNumberPortBusinessLine(params *ThinkteluControlAPIWebServiceAddNumberPortBusinessLineParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceAddNumberPortBusinessLineOK, error)

	ThinkteluControlAPIWebServiceAddNumberPortDID(params *ThinkteluControlAPIWebServiceAddNumberPortDIDParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceAddNumberPortDIDOK, error)

	ThinkteluControlAPIWebServiceAddNumberPortPermanentCallForward(params *ThinkteluControlAPIWebServiceAddNumberPortPermanentCallForwardParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceAddNumberPortPermanentCallForwardOK, error)

	ThinkteluControlAPIWebServiceAddNumberPortResidentialLine(params *ThinkteluControlAPIWebServiceAddNumberPortResidentialLineParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceAddNumberPortResidentialLineOK, error)

	ThinkteluControlAPIWebServiceAddPilotNumber(params *ThinkteluControlAPIWebServiceAddPilotNumberParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceAddPilotNumberOK, error)

	ThinkteluControlAPIWebServiceAddV911v2Deprecated(params *ThinkteluControlAPIWebServiceAddV911v2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceAddV911v2DeprecatedOK, error)

	ThinkteluControlAPIWebServiceGetNumberPortCIPStatusByTicketMask(params *ThinkteluControlAPIWebServiceGetNumberPortCIPStatusByTicketMaskParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceGetNumberPortCIPStatusByTicketMaskOK, error)

	ThinkteluControlAPIWebServiceGetNumberPortStatusByDID(params *ThinkteluControlAPIWebServiceGetNumberPortStatusByDIDParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceGetNumberPortStatusByDIDOK, error)

	ThinkteluControlAPIWebServiceGetNumberPortStatusByTicketMask(params *ThinkteluControlAPIWebServiceGetNumberPortStatusByTicketMaskParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceGetNumberPortStatusByTicketMaskOK, error)

	ThinkteluControlAPIWebServiceListV911sv2Deprecated(params *ThinkteluControlAPIWebServiceListV911sv2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceListV911sv2DeprecatedOK, error)

	ThinkteluControlAPIWebServiceVerifyV911v2Deprecated(params *ThinkteluControlAPIWebServiceVerifyV911v2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceVerifyV911v2DeprecatedOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
ThinkteluControlAPIRestServiceCancelV911v2Deprecated deletes v911 contact information record

DEPRECATED: Path updated to '/v2/V911s/{number}' for consistency.
*/
func (a *Client) ThinkteluControlAPIRestServiceCancelV911v2Deprecated(params *ThinkteluControlAPIRestServiceCancelV911v2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIRestServiceCancelV911v2DeprecatedOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIRestServiceCancelV911v2DeprecatedParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.RestService.CancelV911v2_Deprecated",
		Method:             "DELETE",
		PathPattern:        "/V911s/v2/{number}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIRestServiceCancelV911v2DeprecatedReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIRestServiceCancelV911v2DeprecatedOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIRestServiceCancelV911v2DeprecatedDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIRestServiceGetV911v2Deprecated retrieves v911 contact information with pending port flag record

DEPRECATED: Path updated to '/v2/V911s/{number}' for consistency.
*/
func (a *Client) ThinkteluControlAPIRestServiceGetV911v2Deprecated(params *ThinkteluControlAPIRestServiceGetV911v2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIRestServiceGetV911v2DeprecatedOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIRestServiceGetV911v2DeprecatedParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.RestService.GetV911v2_Deprecated",
		Method:             "GET",
		PathPattern:        "/V911s/v2/{number}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIRestServiceGetV911v2DeprecatedReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIRestServiceGetV911v2DeprecatedOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIRestServiceGetV911v2DeprecatedDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIRestServiceUpdateDIDPremiumFeaturesDeprecated updates premium features for DID

DEPRECATED: Path updated to 'SipTrunks/{pilot}/Dids/{number}/PremiumFeatures' for consistency.
*/
func (a *Client) ThinkteluControlAPIRestServiceUpdateDIDPremiumFeaturesDeprecated(params *ThinkteluControlAPIRestServiceUpdateDIDPremiumFeaturesDeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIRestServiceUpdateDIDPremiumFeaturesDeprecatedOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIRestServiceUpdateDIDPremiumFeaturesDeprecatedParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.RestService.UpdateDIDPremiumFeatures_Deprecated",
		Method:             "PUT",
		PathPattern:        "/SipTrunk/{pilot}/Did/{number}/PremiumFeatures",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIRestServiceUpdateDIDPremiumFeaturesDeprecatedReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIRestServiceUpdateDIDPremiumFeaturesDeprecatedOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIRestServiceUpdateDIDPremiumFeaturesDeprecatedDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIRestServiceUpdateSIPTrunkDIDV2Deprecated updates SIP trunk DID

DEPRECATED: Path updated to '/v2/SipTrunks/{number}/Dids/{did}' for consistency.
*/
func (a *Client) ThinkteluControlAPIRestServiceUpdateSIPTrunkDIDV2Deprecated(params *ThinkteluControlAPIRestServiceUpdateSIPTrunkDIDV2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIRestServiceUpdateSIPTrunkDIDV2DeprecatedOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIRestServiceUpdateSIPTrunkDIDV2DeprecatedParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.RestService.UpdateSipTrunkDidV2_Deprecated",
		Method:             "PUT",
		PathPattern:        "/SipTrunks/{number}/Dids/v2/{did}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIRestServiceUpdateSIPTrunkDIDV2DeprecatedReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIRestServiceUpdateSIPTrunkDIDV2DeprecatedOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIRestServiceUpdateSIPTrunkDIDV2DeprecatedDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIRestServiceUpdateSubscriberPremiumFeaturesDeprecated updates premium features for Sip trunk

DEPRECATED: Path updated to 'SipTrunks/{pilot}/PremiumFeatures' for consistency.
*/
func (a *Client) ThinkteluControlAPIRestServiceUpdateSubscriberPremiumFeaturesDeprecated(params *ThinkteluControlAPIRestServiceUpdateSubscriberPremiumFeaturesDeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIRestServiceUpdateSubscriberPremiumFeaturesDeprecatedOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIRestServiceUpdateSubscriberPremiumFeaturesDeprecatedParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.RestService.UpdateSubscriberPremiumFeatures_Deprecated",
		Method:             "PUT",
		PathPattern:        "/SipTrunk/{pilot}/PremiumFeatures",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIRestServiceUpdateSubscriberPremiumFeaturesDeprecatedReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIRestServiceUpdateSubscriberPremiumFeaturesDeprecatedOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIRestServiceUpdateSubscriberPremiumFeaturesDeprecatedDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIRestServiceUpdateV911v2Deprecated updates v911 contact information with pending port flag record

DEPRECATED: Path updated to '/v2/V911s/{number}' for consistency.
*/
func (a *Client) ThinkteluControlAPIRestServiceUpdateV911v2Deprecated(params *ThinkteluControlAPIRestServiceUpdateV911v2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIRestServiceUpdateV911v2DeprecatedOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIRestServiceUpdateV911v2DeprecatedParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.RestService.UpdateV911v2_Deprecated",
		Method:             "PUT",
		PathPattern:        "/V911s/v2/{number}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIRestServiceUpdateV911v2DeprecatedReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIRestServiceUpdateV911v2DeprecatedOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIRestServiceUpdateV911v2DeprecatedDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIWebServiceAddNumberPortBusinessLine submits port in request for business line

DEPRECATED: Please use latest version of same operation instead.
*/
func (a *Client) ThinkteluControlAPIWebServiceAddNumberPortBusinessLine(params *ThinkteluControlAPIWebServiceAddNumberPortBusinessLineParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceAddNumberPortBusinessLineOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIWebServiceAddNumberPortBusinessLineParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.WebService.AddNumberPortBusinessLine",
		Method:             "POST",
		PathPattern:        "/NumberPorts/Inbound/BusinessLines",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIWebServiceAddNumberPortBusinessLineReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIWebServiceAddNumberPortBusinessLineOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIWebServiceAddNumberPortBusinessLineDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIWebServiceAddNumberPortDID submits port in request for SIP trunk DID

DEPRECATED: Please use latest version of same operation instead.
*/
func (a *Client) ThinkteluControlAPIWebServiceAddNumberPortDID(params *ThinkteluControlAPIWebServiceAddNumberPortDIDParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceAddNumberPortDIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIWebServiceAddNumberPortDIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.WebService.AddNumberPortDID",
		Method:             "POST",
		PathPattern:        "/NumberPorts/Inbound/DIDs",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIWebServiceAddNumberPortDIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIWebServiceAddNumberPortDIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIWebServiceAddNumberPortDIDDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIWebServiceAddNumberPortPermanentCallForward submits port in request for permanent call forward

DEPRECATED: Please use latest version of same operation instead.
*/
func (a *Client) ThinkteluControlAPIWebServiceAddNumberPortPermanentCallForward(params *ThinkteluControlAPIWebServiceAddNumberPortPermanentCallForwardParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceAddNumberPortPermanentCallForwardOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIWebServiceAddNumberPortPermanentCallForwardParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.WebService.AddNumberPortPermanentCallForward",
		Method:             "POST",
		PathPattern:        "/NumberPorts/Inbound/PermanentCallForwards",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIWebServiceAddNumberPortPermanentCallForwardReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIWebServiceAddNumberPortPermanentCallForwardOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIWebServiceAddNumberPortPermanentCallForwardDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIWebServiceAddNumberPortResidentialLine submits port in request for residential line

DEPRECATED: Please use latest version of same operation instead.
*/
func (a *Client) ThinkteluControlAPIWebServiceAddNumberPortResidentialLine(params *ThinkteluControlAPIWebServiceAddNumberPortResidentialLineParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceAddNumberPortResidentialLineOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIWebServiceAddNumberPortResidentialLineParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.WebService.AddNumberPortResidentialLine",
		Method:             "POST",
		PathPattern:        "/NumberPorts/Inbound/ResidentialLines",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIWebServiceAddNumberPortResidentialLineReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIWebServiceAddNumberPortResidentialLineOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIWebServiceAddNumberPortResidentialLineDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIWebServiceAddPilotNumber submits additional pilot number information and instructions for existing port in request
*/
func (a *Client) ThinkteluControlAPIWebServiceAddPilotNumber(params *ThinkteluControlAPIWebServiceAddPilotNumberParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceAddPilotNumberOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIWebServiceAddPilotNumberParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.WebService.AddPilotNumber",
		Method:             "POST",
		PathPattern:        "/NumberPorts/Inbound/AddPilotNumber",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIWebServiceAddPilotNumberReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIWebServiceAddPilotNumberOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIWebServiceAddPilotNumberDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIWebServiceAddV911v2Deprecated creates v911 contact information with pending port flag record

DEPRECATED: Path updated to '/v2/V911s' for consistency.
*/
func (a *Client) ThinkteluControlAPIWebServiceAddV911v2Deprecated(params *ThinkteluControlAPIWebServiceAddV911v2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceAddV911v2DeprecatedOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIWebServiceAddV911v2DeprecatedParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.WebService.AddV911v2_Deprecated",
		Method:             "POST",
		PathPattern:        "/V911s/v2",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIWebServiceAddV911v2DeprecatedReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIWebServiceAddV911v2DeprecatedOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIWebServiceAddV911v2DeprecatedDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIWebServiceGetNumberPortCIPStatusByTicketMask retrieves c IP status of port in ticket
*/
func (a *Client) ThinkteluControlAPIWebServiceGetNumberPortCIPStatusByTicketMask(params *ThinkteluControlAPIWebServiceGetNumberPortCIPStatusByTicketMaskParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceGetNumberPortCIPStatusByTicketMaskOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIWebServiceGetNumberPortCIPStatusByTicketMaskParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.WebService.GetNumberPortCIPStatusByTicketMask",
		Method:             "GET",
		PathPattern:        "/NumberPorts/CIPStatus/Ticket/{ticketmask}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIWebServiceGetNumberPortCIPStatusByTicketMaskReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIWebServiceGetNumberPortCIPStatusByTicketMaskOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIWebServiceGetNumberPortCIPStatusByTicketMaskDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIWebServiceGetNumberPortStatusByDID retrieves status of port in telephone number

DEPRECATED: Please use latest version of same operation instead.
*/
func (a *Client) ThinkteluControlAPIWebServiceGetNumberPortStatusByDID(params *ThinkteluControlAPIWebServiceGetNumberPortStatusByDIDParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceGetNumberPortStatusByDIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIWebServiceGetNumberPortStatusByDIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.WebService.GetNumberPortStatusByDID",
		Method:             "GET",
		PathPattern:        "/NumberPorts/Status/DID/{number}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIWebServiceGetNumberPortStatusByDIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIWebServiceGetNumberPortStatusByDIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIWebServiceGetNumberPortStatusByDIDDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIWebServiceGetNumberPortStatusByTicketMask retrieves status of port in ticket

DEPRECATED: Please use latest version of same operation instead.
*/
func (a *Client) ThinkteluControlAPIWebServiceGetNumberPortStatusByTicketMask(params *ThinkteluControlAPIWebServiceGetNumberPortStatusByTicketMaskParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceGetNumberPortStatusByTicketMaskOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIWebServiceGetNumberPortStatusByTicketMaskParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.WebService.GetNumberPortStatusByTicketMask",
		Method:             "GET",
		PathPattern:        "/NumberPorts/Status/Ticket/{ticketmask}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIWebServiceGetNumberPortStatusByTicketMaskReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIWebServiceGetNumberPortStatusByTicketMaskOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIWebServiceGetNumberPortStatusByTicketMaskDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIWebServiceListV911sv2Deprecated lists v911 contact information with pending port flag records

DEPRECATED: Path updated to '/v2/V911s' for consistency.
*/
func (a *Client) ThinkteluControlAPIWebServiceListV911sv2Deprecated(params *ThinkteluControlAPIWebServiceListV911sv2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceListV911sv2DeprecatedOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIWebServiceListV911sv2DeprecatedParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.WebService.ListV911sv2_Deprecated",
		Method:             "GET",
		PathPattern:        "/V911s/v2",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIWebServiceListV911sv2DeprecatedReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIWebServiceListV911sv2DeprecatedOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIWebServiceListV911sv2DeprecatedDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
ThinkteluControlAPIWebServiceVerifyV911v2Deprecated verifies v911 contact information with pending port flag record

DEPRECATED: Path updated to '/v2/V911s/Verify' for consistency.
*/
func (a *Client) ThinkteluControlAPIWebServiceVerifyV911v2Deprecated(params *ThinkteluControlAPIWebServiceVerifyV911v2DeprecatedParams, opts ...ClientOption) (*ThinktelUControlAPIWebServiceVerifyV911v2DeprecatedOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewThinkteluControlAPIWebServiceVerifyV911v2DeprecatedParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Thinktel.uControl.Api.WebService.VerifyV911v2_Deprecated",
		Method:             "POST",
		PathPattern:        "/V911s/v2/Verify",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ThinkteluControlAPIWebServiceVerifyV911v2DeprecatedReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ThinktelUControlAPIWebServiceVerifyV911v2DeprecatedOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*ThinkteluControlAPIWebServiceVerifyV911v2DeprecatedDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
